# https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-a-registry-using-a-personal-access-token
name: Publish to GH Container Registry

on:
  release:
    types: [created]
  # workflow_dispatch:
  #   inputs:
  #     tag:
  #       description: 'Tag'
  #       default: 'v0.0.1'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  # NODE_ENV: production

jobs:
  publish-ghcr:

    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      # Checkout
      - uses: actions/checkout@v3
      # Build for production
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: |
          npm install
          npm run build --if-present

      # Container image related steps
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.source=https://github.com/cetracker/cetrack-frontend
            org.opencontainers.image.description=CETracker frontend container image
            org.opencontainers.image.licenses=GPLv3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
